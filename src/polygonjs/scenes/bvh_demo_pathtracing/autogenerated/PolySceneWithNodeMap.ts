import { ParamValueSerializedTypeMap } from "@polygonjs/polygonjs/dist/src/engine/params/types/ParamValueSerializedTypeMap";

import { PolyScene } from "@polygonjs/polygonjs/dist/src/engine/scene/PolyScene";
// obj
import { CopNetworkObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/CopNetwork";
import { GeoObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/Geo";
// cop
import { BuilderCopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/cop/Builder";
import { EnvMapCopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/cop/EnvMap";
import { ImageCopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/cop/Image";
import { ImageEXRCopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/cop/ImageEXR";
// sop
import { AreaLightSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AreaLight";
import { AttribCreateSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AttribCreate";
import { BVHSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/BVH";
import { BoxSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Box";
import { CameraControlsSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/CameraControls";
import { CameraRendererSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/CameraRenderer";
import { ConeSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Cone";
import { CopySopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Copy";
import { DeleteSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Delete";
import { FileGLTFSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/FileGLTF";
import { HemisphereLightSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/HemisphereLight";
import { HierarchySopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Hierarchy";
import { JitterSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Jitter";
import { LineSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Line";
import { MaterialSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Material";
import { MaterialsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/MaterialsNetwork";
import { MergeSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Merge";
import { PerspectiveCameraSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PerspectiveCamera";
import { PlaneHelperSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PlaneHelper";
import { PlaneSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Plane";
import { PointBuilderSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PointBuilder";
import { PolarTransformSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PolarTransform";
import { PolywireSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Polywire";
import { RaySopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Ray";
import { ScatterSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Scatter";
import { SubnetInputSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/SubnetInput";
import { SubnetOutputSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/SubnetOutput";
import { SubnetSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Subnet";
import { TransformSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Transform";
// event
import { CameraOrbitControlsEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/CameraOrbitControls";
// rop
import { PathTracingRendererRopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/rop/PathTracingRenderer";
// mat
import { MeshStandardMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshStandard";

export class PolySceneWithNodeMap_bvh_demo_pathtracing extends PolyScene {
  node(path: "/COP"): CopNetworkObjNode;
  node(path: "/COP/envMap"): EnvMapCopNode;
  node(path: "/COP/imageEnv"): ImageEXRCopNode;
  node(path: "/COP/image1"): ImageCopNode;
  node(path: "/COP/builder1"): BuilderCopNode;
  node(path: "/cameras"): GeoObjNode;
  node(path: "/cameras/perspectiveCamera1"): PerspectiveCameraSopNode;
  node(path: "/cameras/polarTransform1"): PolarTransformSopNode;
  node(path: "/cameras/perspectiveCamera_PBR"): PerspectiveCameraSopNode;
  node(path: "/cameras/merge1"): MergeSopNode;
  node(path: "/cameras/perspectiveCamera_DEBUG"): PerspectiveCameraSopNode;
  node(path: "/cameras/merge2"): MergeSopNode;
  node(path: "/cameras/cameraControls1"): CameraControlsSopNode;
  node(
    path: "/cameras/cameraControls1/cameraOrbitControls1"
  ): CameraOrbitControlsEventNode;
  node(path: "/cameras/cameraRenderer1"): CameraRendererSopNode;
  node(
    path: "/cameras/cameraRenderer1/pathTracingRenderer1"
  ): PathTracingRendererRopNode;
  node(path: "/lights"): GeoObjNode;
  node(path: "/lights/areaLight1"): AreaLightSopNode;
  node(path: "/lights/polarTransform1"): PolarTransformSopNode;
  node(path: "/lights/areaLight2"): AreaLightSopNode;
  node(path: "/lights/polarTransform2"): PolarTransformSopNode;
  node(path: "/lights/merge1"): MergeSopNode;
  node(path: "/lights/polarTransform3"): PolarTransformSopNode;
  node(path: "/lights/hemisphereLight1"): HemisphereLightSopNode;
  node(path: "/lights/merge2"): MergeSopNode;
  node(path: "/lights/transform1"): TransformSopNode;
  node(path: "/lights/transform2"): TransformSopNode;
  node(path: "/lights/areaLight3"): AreaLightSopNode;
  node(path: "/lights/merge3"): MergeSopNode;
  node(path: "/geo1"): GeoObjNode;
  node(path: "/geo1/fileGLTF1"): FileGLTFSopNode;
  node(path: "/geo1/hierarchy1"): HierarchySopNode;
  node(path: "/geo1/material1"): MaterialSopNode;
  node(path: "/geo1/line1"): LineSopNode;
  node(path: "/geo1/transform1"): TransformSopNode;
  node(path: "/geo1/merge1"): MergeSopNode;
  node(path: "/geo1/transform2"): TransformSopNode;
  node(path: "/geo1/merge2"): MergeSopNode;
  node(path: "/geo1/plane1"): PlaneSopNode;
  node(path: "/geo1/material2"): MaterialSopNode;
  node(path: "/geo1/polywire1"): PolywireSopNode;
  node(path: "/geo1/material3"): MaterialSopNode;
  node(path: "/geo1/merge3"): MergeSopNode;
  node(path: "/geo1/material4"): MaterialSopNode;
  node(path: "/geo1/planeHelper1"): PlaneHelperSopNode;
  node(path: "/geo1/transform3"): TransformSopNode;
  node(path: "/geo1/MAT"): MaterialsNetworkSopNode;
  node(path: "/geo1/MAT/meshStandard_GROUND"): MeshStandardMatNode;
  node(path: "/geo1/MAT/meshStandard_STATUE"): MeshStandardMatNode;
  node(path: "/geo1/MAT/meshStandard_SPIKES"): MeshStandardMatNode;
  node(path: "/geo1/MAT/meshStandard_STATUE1"): MeshStandardMatNode;
  node(path: "/geo1/subnet1"): SubnetSopNode;
  node(path: "/geo1/subnet1/subnetInput1"): SubnetInputSopNode;
  node(path: "/geo1/subnet1/subnetOutput1"): SubnetOutputSopNode;
  node(path: "/geo1/subnet1/plane2"): PlaneSopNode;
  node(path: "/geo1/subnet1/transform1"): TransformSopNode;
  node(path: "/geo1/subnet1/merge1"): MergeSopNode;
  node(path: "/geo1/subnet1/scatter1"): ScatterSopNode;
  node(path: "/geo1/subnet1/ray1"): RaySopNode;
  node(path: "/geo1/subnet1/BVH1"): BVHSopNode;
  node(path: "/geo1/subnet1/copy1"): CopySopNode;
  node(path: "/geo1/subnet1/cone1"): ConeSopNode;
  node(path: "/geo1/subnet1/jitter1"): JitterSopNode;
  node(path: "/geo1/subnet1/delete1"): DeleteSopNode;
  node(path: "/geo1/subnet1/attribCreate1"): AttribCreateSopNode;
  node(path: "/geo1/subnet1/box1"): BoxSopNode;
  node(path: "/geo1/subnet1/delete2"): DeleteSopNode;
  node(path: "/geo1/subnet1/delete3"): DeleteSopNode;
  node(path: "/geo1/subnet1/box2"): BoxSopNode;
  node(path: "/geo1/subnet1/delete4"): DeleteSopNode;
  node(path: "/geo1/subnet1/transform2"): TransformSopNode;
  node(path: "/geo1/subnet1/merge2"): MergeSopNode;
  node(path: "/geo1/subnet1/pointBuilder1"): PointBuilderSopNode;
  node(
    path: string
  ): any /* we need any for now as otherwise an error occurs when adding plugins to the overloaded methods */ {
    return super.node(path);
  }
}

export interface PolySceneProps_bvh_demo_pathtracing {
  "COP-envMap--useCameraRenderer"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--url"?: ParamValueSerializedTypeMap["string"];
  "COP-imageEnv--reload"?: ParamValueSerializedTypeMap["button"];
  "COP-imageEnv--tcolorSpace"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--colorSpace"?: ParamValueSerializedTypeMap["string"];
  "COP-imageEnv--tmapping"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--mapping"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEnv--twrap"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--wrapS"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEnv--wrapT"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEnv--tminFilter"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--minFilter"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEnv--tmagFilter"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--magFilter"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEnv--tanisotropy"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--useRendererMaxAnisotropy"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--anisotropy"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEnv--tflipY"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--flipY"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--ttransform"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--offset"?: ParamValueSerializedTypeMap["vector2"];
  "COP-imageEnv--offset-offsetx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--offset-offsety"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--offsetx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--offsety"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--repeat"?: ParamValueSerializedTypeMap["vector2"];
  "COP-imageEnv--repeat-repeatx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--repeat-repeaty"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--repeatx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--repeaty"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--rotation"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--center"?: ParamValueSerializedTypeMap["vector2"];
  "COP-imageEnv--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--center-centery"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--centerx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--centery"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--tadvanced"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--tformat"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--format"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEnv--ttype"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--type"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEnv--checkFileType"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--url"?: ParamValueSerializedTypeMap["string"];
  "COP-image1--reload"?: ParamValueSerializedTypeMap["button"];
  "COP-image1--tcolorSpace"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--colorSpace"?: ParamValueSerializedTypeMap["string"];
  "COP-image1--tmapping"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--mapping"?: ParamValueSerializedTypeMap["integer"];
  "COP-image1--twrap"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--wrapS"?: ParamValueSerializedTypeMap["integer"];
  "COP-image1--wrapT"?: ParamValueSerializedTypeMap["integer"];
  "COP-image1--tminFilter"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--minFilter"?: ParamValueSerializedTypeMap["integer"];
  "COP-image1--tmagFilter"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--magFilter"?: ParamValueSerializedTypeMap["integer"];
  "COP-image1--tanisotropy"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--useRendererMaxAnisotropy"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--anisotropy"?: ParamValueSerializedTypeMap["integer"];
  "COP-image1--tflipY"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--flipY"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--ttransform"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--offset"?: ParamValueSerializedTypeMap["vector2"];
  "COP-image1--offset-offsetx"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--offset-offsety"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--offsetx"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--offsety"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--repeat"?: ParamValueSerializedTypeMap["vector2"];
  "COP-image1--repeat-repeatx"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--repeat-repeaty"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--repeatx"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--repeaty"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--rotation"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--center"?: ParamValueSerializedTypeMap["vector2"];
  "COP-image1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--centerx"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--centery"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--tadvanced"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--tformat"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--format"?: ParamValueSerializedTypeMap["integer"];
  "COP-image1--ttype"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--type"?: ParamValueSerializedTypeMap["integer"];
  "COP-image1--checkFileType"?: ParamValueSerializedTypeMap["boolean"];
  "COP-builder1--resolution"?: ParamValueSerializedTypeMap["vector2"];
  "COP-builder1--resolution-resolutionx"?: ParamValueSerializedTypeMap["float"];
  "COP-builder1--resolution-resolutiony"?: ParamValueSerializedTypeMap["float"];
  "COP-builder1--resolutionx"?: ParamValueSerializedTypeMap["float"];
  "COP-builder1--resolutiony"?: ParamValueSerializedTypeMap["float"];
  "COP-builder1--useCameraRenderer"?: ParamValueSerializedTypeMap["boolean"];
  "COP-builder1--useDataTexture"?: ParamValueSerializedTypeMap["boolean"];
  "COP-builder1--render"?: ParamValueSerializedTypeMap["button"];
  "COP-builder1--tcolorSpace"?: ParamValueSerializedTypeMap["boolean"];
  "COP-builder1--colorSpace"?: ParamValueSerializedTypeMap["string"];
  "COP-builder1--tmapping"?: ParamValueSerializedTypeMap["boolean"];
  "COP-builder1--mapping"?: ParamValueSerializedTypeMap["integer"];
  "COP-builder1--twrap"?: ParamValueSerializedTypeMap["boolean"];
  "COP-builder1--wrapS"?: ParamValueSerializedTypeMap["integer"];
  "COP-builder1--wrapT"?: ParamValueSerializedTypeMap["integer"];
  "COP-builder1--tminFilter"?: ParamValueSerializedTypeMap["boolean"];
  "COP-builder1--minFilter"?: ParamValueSerializedTypeMap["integer"];
  "COP-builder1--tmagFilter"?: ParamValueSerializedTypeMap["boolean"];
  "COP-builder1--magFilter"?: ParamValueSerializedTypeMap["integer"];
  "COP-builder1--tanisotropy"?: ParamValueSerializedTypeMap["boolean"];
  "COP-builder1--useRendererMaxAnisotropy"?: ParamValueSerializedTypeMap["boolean"];
  "COP-builder1--anisotropy"?: ParamValueSerializedTypeMap["integer"];
  "COP-builder1--tflipY"?: ParamValueSerializedTypeMap["boolean"];
  "COP-builder1--flipY"?: ParamValueSerializedTypeMap["boolean"];
  "COP-builder1--ttransform"?: ParamValueSerializedTypeMap["boolean"];
  "COP-builder1--offset"?: ParamValueSerializedTypeMap["vector2"];
  "COP-builder1--offset-offsetx"?: ParamValueSerializedTypeMap["float"];
  "COP-builder1--offset-offsety"?: ParamValueSerializedTypeMap["float"];
  "COP-builder1--offsetx"?: ParamValueSerializedTypeMap["float"];
  "COP-builder1--offsety"?: ParamValueSerializedTypeMap["float"];
  "COP-builder1--repeat"?: ParamValueSerializedTypeMap["vector2"];
  "COP-builder1--repeat-repeatx"?: ParamValueSerializedTypeMap["float"];
  "COP-builder1--repeat-repeaty"?: ParamValueSerializedTypeMap["float"];
  "COP-builder1--repeatx"?: ParamValueSerializedTypeMap["float"];
  "COP-builder1--repeaty"?: ParamValueSerializedTypeMap["float"];
  "COP-builder1--rotation"?: ParamValueSerializedTypeMap["float"];
  "COP-builder1--center"?: ParamValueSerializedTypeMap["vector2"];
  "COP-builder1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "COP-builder1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "COP-builder1--centerx"?: ParamValueSerializedTypeMap["float"];
  "COP-builder1--centery"?: ParamValueSerializedTypeMap["float"];
  "COP-builder1--tadvanced"?: ParamValueSerializedTypeMap["boolean"];
  "COP-builder1--tformat"?: ParamValueSerializedTypeMap["boolean"];
  "COP-builder1--format"?: ParamValueSerializedTypeMap["integer"];
  "COP-builder1--ttype"?: ParamValueSerializedTypeMap["boolean"];
  "COP-builder1--type"?: ParamValueSerializedTypeMap["integer"];
  "cameras--transform"?: ParamValueSerializedTypeMap["folder"];
  "cameras--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "cameras--t"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--t-tx"?: ParamValueSerializedTypeMap["float"];
  "cameras--t-ty"?: ParamValueSerializedTypeMap["float"];
  "cameras--t-tz"?: ParamValueSerializedTypeMap["float"];
  "cameras--tx"?: ParamValueSerializedTypeMap["float"];
  "cameras--ty"?: ParamValueSerializedTypeMap["float"];
  "cameras--tz"?: ParamValueSerializedTypeMap["float"];
  "cameras--r"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--r-rx"?: ParamValueSerializedTypeMap["float"];
  "cameras--r-ry"?: ParamValueSerializedTypeMap["float"];
  "cameras--r-rz"?: ParamValueSerializedTypeMap["float"];
  "cameras--rx"?: ParamValueSerializedTypeMap["float"];
  "cameras--ry"?: ParamValueSerializedTypeMap["float"];
  "cameras--rz"?: ParamValueSerializedTypeMap["float"];
  "cameras--s"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--s-sx"?: ParamValueSerializedTypeMap["float"];
  "cameras--s-sy"?: ParamValueSerializedTypeMap["float"];
  "cameras--s-sz"?: ParamValueSerializedTypeMap["float"];
  "cameras--sx"?: ParamValueSerializedTypeMap["float"];
  "cameras--sy"?: ParamValueSerializedTypeMap["float"];
  "cameras--sz"?: ParamValueSerializedTypeMap["float"];
  "cameras--scale"?: ParamValueSerializedTypeMap["float"];
  "cameras--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "cameras--display"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "cameras--CAD"?: ParamValueSerializedTypeMap["folder"];
  "cameras--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--CSG"?: ParamValueSerializedTypeMap["folder"];
  "cameras--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "cameras--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TET"?: ParamValueSerializedTypeMap["folder"];
  "cameras--TetScale"?: ParamValueSerializedTypeMap["float"];
  "cameras--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera1--default"?: ParamValueSerializedTypeMap["folder"];
  "cameras-perspectiveCamera1--fov"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--near"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--far"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--position"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotation"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera1--rotation-rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotation-rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotation-rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera1--name"?: ParamValueSerializedTypeMap["string"];
  "cameras-perspectiveCamera1--updateTransformFromCamera"?: ParamValueSerializedTypeMap["button"];
  "cameras-perspectiveCamera1--PBR"?: ParamValueSerializedTypeMap["folder"];
  "cameras-perspectiveCamera1--apertureBlades"?: ParamValueSerializedTypeMap["integer"];
  "cameras-perspectiveCamera1--fStop"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--focusDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--apertureRotation"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--anamorphicRatio"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "cameras-polarTransform1--center"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-polarTransform1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--centerx"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--centery"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--centerz"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--longitude"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--latitude"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--depth"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_PBR--default"?: ParamValueSerializedTypeMap["folder"];
  "cameras-perspectiveCamera_PBR--fov"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_PBR--near"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_PBR--far"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_PBR--position"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_PBR--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_PBR--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_PBR--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_PBR--positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_PBR--positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_PBR--positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_PBR--rotation"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_PBR--rotation-rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_PBR--rotation-rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_PBR--rotation-rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_PBR--rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_PBR--rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_PBR--rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_PBR--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_PBR--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_PBR--name"?: ParamValueSerializedTypeMap["string"];
  "cameras-perspectiveCamera_PBR--updateTransformFromCamera"?: ParamValueSerializedTypeMap["button"];
  "cameras-perspectiveCamera_PBR--PBR"?: ParamValueSerializedTypeMap["folder"];
  "cameras-perspectiveCamera_PBR--apertureBlades"?: ParamValueSerializedTypeMap["integer"];
  "cameras-perspectiveCamera_PBR--fStop"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_PBR--focusDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_PBR--apertureRotation"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_PBR--anamorphicRatio"?: ParamValueSerializedTypeMap["float"];
  "cameras-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-merge1--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "cameras-perspectiveCamera_DEBUG--default"?: ParamValueSerializedTypeMap["folder"];
  "cameras-perspectiveCamera_DEBUG--fov"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--near"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--far"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--position"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_DEBUG--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotation"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_DEBUG--rotation-rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotation-rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotation-rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_DEBUG--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_DEBUG--name"?: ParamValueSerializedTypeMap["string"];
  "cameras-perspectiveCamera_DEBUG--updateTransformFromCamera"?: ParamValueSerializedTypeMap["button"];
  "cameras-perspectiveCamera_DEBUG--PBR"?: ParamValueSerializedTypeMap["folder"];
  "cameras-perspectiveCamera_DEBUG--apertureBlades"?: ParamValueSerializedTypeMap["integer"];
  "cameras-perspectiveCamera_DEBUG--fStop"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--focusDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--apertureRotation"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--anamorphicRatio"?: ParamValueSerializedTypeMap["float"];
  "cameras-merge2--compact"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-merge2--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-merge2--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1--group"?: ParamValueSerializedTypeMap["string"];
  "cameras-cameraControls1--node"?: ParamValueSerializedTypeMap["node_path"];
  "cameras-cameraControls1-cameraOrbitControls1--main"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls1-cameraOrbitControls1--enabled"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowPan"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowRotate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowZoom"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--tdamping"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--damping"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--screenSpacePanning"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--rotateSpeed"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--limits"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls1-cameraOrbitControls1--minDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--maxDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--limitAzimuthAngle"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange-polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange-polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--controls"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls1-cameraOrbitControls1--leftMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--middleMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--rightMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--oneFingerTouch"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--twoFingersTouch"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--misc"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls1-cameraOrbitControls1--target"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targetx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targety"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targetz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targetx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targety"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targetz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraRenderer1--group"?: ParamValueSerializedTypeMap["string"];
  "cameras-cameraRenderer1--node"?: ParamValueSerializedTypeMap["node_path"];
  "cameras-cameraRenderer1-pathTracingRenderer1--realtime"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraRenderer1-pathTracingRenderer1--displayDebug"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraRenderer1-pathTracingRenderer1--useWorker"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraRenderer1-pathTracingRenderer1--maxSamplesCount"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraRenderer1-pathTracingRenderer1--resolutionScale"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraRenderer1-pathTracingRenderer1--bounces"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraRenderer1-pathTracingRenderer1--transmissiveBounces"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraRenderer1-pathTracingRenderer1--stableNoise"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraRenderer1-pathTracingRenderer1--multipleImportanceSampling"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraRenderer1-pathTracingRenderer1--filterGlossyFactor"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraRenderer1-pathTracingRenderer1--backgroundBlur"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraRenderer1-pathTracingRenderer1--environmentIntensity"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraRenderer1-pathTracingRenderer1--denoise"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraRenderer1-pathTracingRenderer1--denoiseSigma"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraRenderer1-pathTracingRenderer1--denoiseThreshold"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraRenderer1-pathTracingRenderer1--denoiseKSigma"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraRenderer1-pathTracingRenderer1--tiles"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraRenderer1-pathTracingRenderer1--tiles-tilesx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraRenderer1-pathTracingRenderer1--tiles-tilesy"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraRenderer1-pathTracingRenderer1--tilesx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraRenderer1-pathTracingRenderer1--tilesy"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraRenderer1-pathTracingRenderer1--sequenceRender"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraRenderer1-pathTracingRenderer1--f"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraRenderer1-pathTracingRenderer1--f-fx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraRenderer1-pathTracingRenderer1--f-fy"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraRenderer1-pathTracingRenderer1--fx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraRenderer1-pathTracingRenderer1--fy"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraRenderer1-pathTracingRenderer1--samplesPerAnimationFrame"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraRenderer1-pathTracingRenderer1--resolution"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraRenderer1-pathTracingRenderer1--resolution-resolutionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraRenderer1-pathTracingRenderer1--resolution-resolutiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraRenderer1-pathTracingRenderer1--resolutionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraRenderer1-pathTracingRenderer1--resolutiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraRenderer1-pathTracingRenderer1--fileName"?: ParamValueSerializedTypeMap["string"];
  "cameras-cameraRenderer1-pathTracingRenderer1--framePadding"?: ParamValueSerializedTypeMap["integer"];
  "lights--transform"?: ParamValueSerializedTypeMap["folder"];
  "lights--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "lights--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "lights--t"?: ParamValueSerializedTypeMap["vector3"];
  "lights--t-tx"?: ParamValueSerializedTypeMap["float"];
  "lights--t-ty"?: ParamValueSerializedTypeMap["float"];
  "lights--t-tz"?: ParamValueSerializedTypeMap["float"];
  "lights--tx"?: ParamValueSerializedTypeMap["float"];
  "lights--ty"?: ParamValueSerializedTypeMap["float"];
  "lights--tz"?: ParamValueSerializedTypeMap["float"];
  "lights--r"?: ParamValueSerializedTypeMap["vector3"];
  "lights--r-rx"?: ParamValueSerializedTypeMap["float"];
  "lights--r-ry"?: ParamValueSerializedTypeMap["float"];
  "lights--r-rz"?: ParamValueSerializedTypeMap["float"];
  "lights--rx"?: ParamValueSerializedTypeMap["float"];
  "lights--ry"?: ParamValueSerializedTypeMap["float"];
  "lights--rz"?: ParamValueSerializedTypeMap["float"];
  "lights--s"?: ParamValueSerializedTypeMap["vector3"];
  "lights--s-sx"?: ParamValueSerializedTypeMap["float"];
  "lights--s-sy"?: ParamValueSerializedTypeMap["float"];
  "lights--s-sz"?: ParamValueSerializedTypeMap["float"];
  "lights--sx"?: ParamValueSerializedTypeMap["float"];
  "lights--sy"?: ParamValueSerializedTypeMap["float"];
  "lights--sz"?: ParamValueSerializedTypeMap["float"];
  "lights--scale"?: ParamValueSerializedTypeMap["float"];
  "lights--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "lights--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "lights--display"?: ParamValueSerializedTypeMap["boolean"];
  "lights--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "lights--CAD"?: ParamValueSerializedTypeMap["folder"];
  "lights--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "lights--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "lights--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "lights--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "lights--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "lights--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "lights--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "lights--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "lights--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "lights--CSG"?: ParamValueSerializedTypeMap["folder"];
  "lights--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "lights--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "lights--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "lights--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TET"?: ParamValueSerializedTypeMap["folder"];
  "lights--TetScale"?: ParamValueSerializedTypeMap["float"];
  "lights--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "lights-areaLight1--light"?: ParamValueSerializedTypeMap["folder"];
  "lights-areaLight1--color"?: ParamValueSerializedTypeMap["color"];
  "lights-areaLight1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--width"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--height"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "lights-areaLight1--name"?: ParamValueSerializedTypeMap["string"];
  "lights-polarTransform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "lights-polarTransform1--center"?: ParamValueSerializedTypeMap["vector3"];
  "lights-polarTransform1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centerx"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centery"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centerz"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--longitude"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--latitude"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--depth"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight2--light"?: ParamValueSerializedTypeMap["folder"];
  "lights-areaLight2--color"?: ParamValueSerializedTypeMap["color"];
  "lights-areaLight2--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight2--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight2--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight2--colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight2--colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight2--colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight2--intensity"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight2--width"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight2--height"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight2--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "lights-areaLight2--name"?: ParamValueSerializedTypeMap["string"];
  "lights-polarTransform2--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "lights-polarTransform2--center"?: ParamValueSerializedTypeMap["vector3"];
  "lights-polarTransform2--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform2--center-centery"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform2--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform2--centerx"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform2--centery"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform2--centerz"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform2--longitude"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform2--latitude"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform2--depth"?: ParamValueSerializedTypeMap["float"];
  "lights-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "lights-merge1--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "lights-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "lights-polarTransform3--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "lights-polarTransform3--center"?: ParamValueSerializedTypeMap["vector3"];
  "lights-polarTransform3--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform3--center-centery"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform3--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform3--centerx"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform3--centery"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform3--centerz"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform3--longitude"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform3--latitude"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform3--depth"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColor"?: ParamValueSerializedTypeMap["color"];
  "lights-hemisphereLight1--skyColor-skyColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColor-skyColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColor-skyColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor"?: ParamValueSerializedTypeMap["color"];
  "lights-hemisphereLight1--groundColor-groundColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor-groundColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor-groundColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position"?: ParamValueSerializedTypeMap["vector3"];
  "lights-hemisphereLight1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positionx"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positiony"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positionz"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--name"?: ParamValueSerializedTypeMap["string"];
  "lights-merge2--compact"?: ParamValueSerializedTypeMap["boolean"];
  "lights-merge2--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "lights-merge2--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "lights-transform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "lights-transform1--group"?: ParamValueSerializedTypeMap["string"];
  "lights-transform1--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "lights-transform1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "lights-transform1--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "lights-transform1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "lights-transform1--t"?: ParamValueSerializedTypeMap["vector3"];
  "lights-transform1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--tx"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--ty"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--tz"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--r"?: ParamValueSerializedTypeMap["vector3"];
  "lights-transform1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--rx"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--ry"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--rz"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--s"?: ParamValueSerializedTypeMap["vector3"];
  "lights-transform1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--sx"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--sy"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--sz"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--scale"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "lights-transform1--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--pivotx"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--pivoty"?: ParamValueSerializedTypeMap["float"];
  "lights-transform1--pivotz"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "lights-transform2--group"?: ParamValueSerializedTypeMap["string"];
  "lights-transform2--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "lights-transform2--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "lights-transform2--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "lights-transform2--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "lights-transform2--t"?: ParamValueSerializedTypeMap["vector3"];
  "lights-transform2--t-tx"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--t-ty"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--t-tz"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--tx"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--ty"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--tz"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--r"?: ParamValueSerializedTypeMap["vector3"];
  "lights-transform2--r-rx"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--r-ry"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--r-rz"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--rx"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--ry"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--rz"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--s"?: ParamValueSerializedTypeMap["vector3"];
  "lights-transform2--s-sx"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--s-sy"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--s-sz"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--sx"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--sy"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--sz"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--scale"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "lights-transform2--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--pivotx"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--pivoty"?: ParamValueSerializedTypeMap["float"];
  "lights-transform2--pivotz"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight3--light"?: ParamValueSerializedTypeMap["folder"];
  "lights-areaLight3--color"?: ParamValueSerializedTypeMap["color"];
  "lights-areaLight3--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight3--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight3--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight3--colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight3--colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight3--colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight3--intensity"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight3--width"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight3--height"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight3--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "lights-areaLight3--name"?: ParamValueSerializedTypeMap["string"];
  "lights-merge3--compact"?: ParamValueSerializedTypeMap["boolean"];
  "lights-merge3--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "lights-merge3--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "geo1--transform"?: ParamValueSerializedTypeMap["folder"];
  "geo1--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "geo1--display"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1--CAD"?: ParamValueSerializedTypeMap["folder"];
  "geo1--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--CSG"?: ParamValueSerializedTypeMap["folder"];
  "geo1--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "geo1--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TET"?: ParamValueSerializedTypeMap["folder"];
  "geo1--TetScale"?: ParamValueSerializedTypeMap["float"];
  "geo1--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileGLTF1--url"?: ParamValueSerializedTypeMap["string"];
  "geo1-fileGLTF1--draco"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileGLTF1--ktx2"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileGLTF1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileGLTF1--reload"?: ParamValueSerializedTypeMap["button"];
  "geo1-hierarchy1--mode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-hierarchy1--levels"?: ParamValueSerializedTypeMap["integer"];
  "geo1-hierarchy1--objectMask"?: ParamValueSerializedTypeMap["string"];
  "geo1-hierarchy1--addChildMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-material1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "geo1-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "geo1-line1--length"?: ParamValueSerializedTypeMap["float"];
  "geo1-line1--pointsCount"?: ParamValueSerializedTypeMap["integer"];
  "geo1-line1--origin"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-line1--origin-originx"?: ParamValueSerializedTypeMap["float"];
  "geo1-line1--origin-originy"?: ParamValueSerializedTypeMap["float"];
  "geo1-line1--origin-originz"?: ParamValueSerializedTypeMap["float"];
  "geo1-line1--originx"?: ParamValueSerializedTypeMap["float"];
  "geo1-line1--originy"?: ParamValueSerializedTypeMap["float"];
  "geo1-line1--originz"?: ParamValueSerializedTypeMap["float"];
  "geo1-line1--direction"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-line1--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-line1--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-line1--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-line1--directionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-line1--directiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-line1--directionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform1--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-merge1--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform2--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform2--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform2--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform2--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform2--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform2--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-merge2--compact"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-merge2--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-merge2--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "geo1-plane1--size"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-plane1--size-sizex"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--size-sizey"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--sizex"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--sizey"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--useSegmentsCount"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-plane1--stepSize"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--segments"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-plane1--segments-segmentsx"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--segments-segmentsy"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--segmentsx"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--segmentsy"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--direction"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-plane1--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--directionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--directiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--directionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--center"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-plane1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-plane1--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material2--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-material2--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material2--material"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-material2--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material2--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material2--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material2--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "geo1-material2--texDest0"?: ParamValueSerializedTypeMap["string"];
  "geo1-polywire1--radius"?: ParamValueSerializedTypeMap["float"];
  "geo1-polywire1--segmentsRadial"?: ParamValueSerializedTypeMap["integer"];
  "geo1-polywire1--closed"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-polywire1--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "geo1-material3--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-material3--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material3--material"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-material3--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material3--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material3--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material3--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "geo1-material3--texDest0"?: ParamValueSerializedTypeMap["string"];
  "geo1-merge3--compact"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-merge3--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-merge3--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "geo1-material4--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-material4--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material4--material"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-material4--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material4--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material4--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material4--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "geo1-material4--texDest0"?: ParamValueSerializedTypeMap["string"];
  "geo1-planeHelper1--size"?: ParamValueSerializedTypeMap["float"];
  "geo1-planeHelper1--colorCenterLine"?: ParamValueSerializedTypeMap["color"];
  "geo1-planeHelper1--colorCenterLine-colorCenterLiner"?: ParamValueSerializedTypeMap["float"];
  "geo1-planeHelper1--colorCenterLine-colorCenterLineg"?: ParamValueSerializedTypeMap["float"];
  "geo1-planeHelper1--colorCenterLine-colorCenterLineb"?: ParamValueSerializedTypeMap["float"];
  "geo1-planeHelper1--colorCenterLiner"?: ParamValueSerializedTypeMap["float"];
  "geo1-planeHelper1--colorCenterLineg"?: ParamValueSerializedTypeMap["float"];
  "geo1-planeHelper1--colorCenterLineb"?: ParamValueSerializedTypeMap["float"];
  "geo1-planeHelper1--colorGrid"?: ParamValueSerializedTypeMap["color"];
  "geo1-planeHelper1--colorGrid-colorGridr"?: ParamValueSerializedTypeMap["float"];
  "geo1-planeHelper1--colorGrid-colorGridg"?: ParamValueSerializedTypeMap["float"];
  "geo1-planeHelper1--colorGrid-colorGridb"?: ParamValueSerializedTypeMap["float"];
  "geo1-planeHelper1--colorGridr"?: ParamValueSerializedTypeMap["float"];
  "geo1-planeHelper1--colorGridg"?: ParamValueSerializedTypeMap["float"];
  "geo1-planeHelper1--colorGridb"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform3--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform3--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform3--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform3--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform3--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform3--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform3--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform3--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform3--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform3--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--default"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandard_GROUND--color"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshStandard_GROUND--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--useVertexColors"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--opacity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--textures"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandard_GROUND--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--map"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_GROUND--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_GROUND--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_GROUND--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_GROUND--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_GROUND--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--emissive"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshStandard_GROUND--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_GROUND--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_GROUND--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_GROUND--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_GROUND--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_GROUND--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-MAT-meshStandard_GROUND--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_GROUND--metalness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_GROUND--roughness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--advanced"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandard_GROUND--flatShading"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--front"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--blending"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_GROUND--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_GROUND--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_GROUND--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_GROUND--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_GROUND--wireframeLinecap"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_GROUND--wireframeLinejoin"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_GROUND--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--default"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandard_STATUE--color"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshStandard_STATUE--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--useVertexColors"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--opacity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--textures"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandard_STATUE--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--map"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--emissive"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshStandard_STATUE--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_STATUE--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-MAT-meshStandard_STATUE--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE--metalness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE--roughness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--advanced"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandard_STATUE--flatShading"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--front"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--blending"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_STATUE--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_STATUE--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_STATUE--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE--wireframeLinecap"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_STATUE--wireframeLinejoin"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_STATUE--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--default"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandard_SPIKES--color"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshStandard_SPIKES--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--useVertexColors"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--opacity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--textures"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandard_SPIKES--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--map"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_SPIKES--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_SPIKES--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_SPIKES--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_SPIKES--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_SPIKES--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--emissive"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshStandard_SPIKES--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_SPIKES--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_SPIKES--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_SPIKES--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_SPIKES--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_SPIKES--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-MAT-meshStandard_SPIKES--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_SPIKES--metalness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_SPIKES--roughness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--advanced"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandard_SPIKES--flatShading"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--front"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--blending"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_SPIKES--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_SPIKES--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_SPIKES--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_SPIKES--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_SPIKES--wireframeLinecap"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_SPIKES--wireframeLinejoin"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_SPIKES--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--default"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandard_STATUE1--color"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshStandard_STATUE1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--useVertexColors"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--opacity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--textures"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandard_STATUE1--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--map"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE1--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE1--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE1--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE1--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE1--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--emissive"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshStandard_STATUE1--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE1--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE1--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE1--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE1--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_STATUE1--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-MAT-meshStandard_STATUE1--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE1--metalness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard_STATUE1--roughness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--advanced"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandard_STATUE1--flatShading"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--front"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--blending"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_STATUE1--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_STATUE1--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_STATUE1--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard_STATUE1--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard_STATUE1--wireframeLinecap"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_STATUE1--wireframeLinejoin"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard_STATUE1--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-subnetInput1--input"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-plane2--size"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-subnet1-plane2--size-sizex"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--size-sizey"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--sizex"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--sizey"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--useSegmentsCount"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-plane2--stepSize"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--segments"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-subnet1-plane2--segments-segmentsx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--segments-segmentsy"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--segmentsx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--segmentsy"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--direction"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-plane2--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--directionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--directiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--directionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--center"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-plane2--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--center-centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-plane2--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-transform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-transform1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-transform1--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-transform1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-transform1--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-transform1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-transform1--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-transform1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-transform1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-transform1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-transform1--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform1--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-merge1--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-scatter1--pointsCount"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-scatter1--seed"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-scatter1--useWeightAttribute"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-scatter1--weightAttribute"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-scatter1--transferAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-scatter1--attributesToTransfer"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-scatter1--addIdAttribute"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-scatter1--addIdnAttribute"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-ray1--mode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-ray1--useNormals"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-ray1--direction"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-ray1--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-ray1--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-ray1--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-ray1--directionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-ray1--directiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-ray1--directionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-ray1--transformPoints"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-ray1--transferFaceNormals"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-ray1--addDistAttribute"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-BVH1--strategy"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-BVH1--maxDepth"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-BVH1--maxLeafTris"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-BVH1--verbose"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-BVH1--keepOnlyPosition"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-copy1--srcGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-copy1--templateGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-copy1--count"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-copy1--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-copy1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-copy1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-copy1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-copy1--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-copy1--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-copy1--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-copy1--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-copy1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-copy1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-copy1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-copy1--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-copy1--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-copy1--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-copy1--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-copy1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-copy1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-copy1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-copy1--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-copy1--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-copy1--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-copy1--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-copy1--transformOnly"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-copy1--transformMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-copy1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-copy1--copyAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-copy1--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-copy1--useCopyExpr"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-cone1--radius"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-cone1--height"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-cone1--segmentsRadial"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-cone1--segmentsHeight"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-cone1--cap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-cone1--thetaStart"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-cone1--thetaLength"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-cone1--center"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-cone1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-cone1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-cone1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-cone1--centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-cone1--centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-cone1--centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-cone1--direction"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-cone1--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-cone1--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-cone1--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-cone1--directionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-cone1--directiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-cone1--directionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-jitter1--amount"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-jitter1--mult"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-jitter1--mult-multx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-jitter1--mult-multy"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-jitter1--mult-multz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-jitter1--multx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-jitter1--multy"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-jitter1--multz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-jitter1--seed"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete1--class"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete1--invert"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete1--byObjectType"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete1--objectType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete1--byExpression"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete1--expression"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete1--byAttrib"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete1--attribType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete1--attribName"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-delete1--attribSize"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete1--attribComparisonOperator"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete1--attribValue1"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--attribValue2"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-subnet1-delete1--attribValue2-attribValue2x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--attribValue2-attribValue2y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--attribValue2x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--attribValue2y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--attribValue3"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-delete1--attribValue3-attribValue3x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--attribValue3-attribValue3y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--attribValue3-attribValue3z"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--attribValue3x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--attribValue3y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--attribValue3z"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--attribValue4"?: ParamValueSerializedTypeMap["vector4"];
  "geo1-subnet1-delete1--attribValue4-attribValue4x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--attribValue4-attribValue4y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--attribValue4-attribValue4z"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--attribValue4-attribValue4w"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--attribValue4x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--attribValue4y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--attribValue4z"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--attribValue4w"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--attribString"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-delete1--byBbox"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete1--bboxSize"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-delete1--bboxSize-bboxSizex"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--bboxSize-bboxSizey"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--bboxSize-bboxSizez"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--bboxSizex"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--bboxSizey"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--bboxSizez"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--bboxCenter"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-delete1--bboxCenter-bboxCenterx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--bboxCenter-bboxCentery"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--bboxCenter-bboxCenterz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--bboxCenterx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--bboxCentery"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--bboxCenterz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete1--byBoundingObject"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete1--keepPoints"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-attribCreate1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-attribCreate1--class"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-attribCreate1--type"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-attribCreate1--name"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-attribCreate1--size"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-attribCreate1--value1"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-attribCreate1--value2"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-subnet1-attribCreate1--value2-value2x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-attribCreate1--value2-value2y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-attribCreate1--value2x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-attribCreate1--value2y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-attribCreate1--value3"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-attribCreate1--value3-value3x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-attribCreate1--value3-value3y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-attribCreate1--value3-value3z"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-attribCreate1--value3x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-attribCreate1--value3y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-attribCreate1--value3z"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-attribCreate1--value4"?: ParamValueSerializedTypeMap["vector4"];
  "geo1-subnet1-attribCreate1--value4-value4x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-attribCreate1--value4-value4y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-attribCreate1--value4-value4z"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-attribCreate1--value4-value4w"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-attribCreate1--value4x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-attribCreate1--value4y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-attribCreate1--value4z"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-attribCreate1--value4w"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-attribCreate1--string"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-box1--size"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box1--sizes"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-box1--sizes-sizesx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box1--sizes-sizesy"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box1--sizes-sizesz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box1--sizesx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box1--sizesy"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box1--sizesz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box1--divisions"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-box1--divisions-divisionsx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box1--divisions-divisionsy"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box1--divisions-divisionsz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box1--divisionsx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box1--divisionsy"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box1--divisionsz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box1--center"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-box1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box1--centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box1--centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box1--centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--class"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete2--invert"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete2--byObjectType"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete2--objectType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete2--byExpression"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete2--expression"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete2--byAttrib"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete2--attribType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete2--attribName"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-delete2--attribSize"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete2--attribComparisonOperator"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete2--attribValue1"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--attribValue2"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-subnet1-delete2--attribValue2-attribValue2x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--attribValue2-attribValue2y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--attribValue2x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--attribValue2y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--attribValue3"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-delete2--attribValue3-attribValue3x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--attribValue3-attribValue3y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--attribValue3-attribValue3z"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--attribValue3x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--attribValue3y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--attribValue3z"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--attribValue4"?: ParamValueSerializedTypeMap["vector4"];
  "geo1-subnet1-delete2--attribValue4-attribValue4x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--attribValue4-attribValue4y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--attribValue4-attribValue4z"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--attribValue4-attribValue4w"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--attribValue4x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--attribValue4y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--attribValue4z"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--attribValue4w"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--attribString"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-delete2--byBbox"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete2--bboxSize"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-delete2--bboxSize-bboxSizex"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--bboxSize-bboxSizey"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--bboxSize-bboxSizez"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--bboxSizex"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--bboxSizey"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--bboxSizez"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--bboxCenter"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-delete2--bboxCenter-bboxCenterx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--bboxCenter-bboxCentery"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--bboxCenter-bboxCenterz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--bboxCenterx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--bboxCentery"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--bboxCenterz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete2--byBoundingObject"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete2--keepPoints"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete3--class"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete3--invert"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete3--byObjectType"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete3--objectType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete3--byExpression"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete3--expression"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete3--byAttrib"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete3--attribType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete3--attribName"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-delete3--attribSize"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete3--attribComparisonOperator"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete3--attribValue1"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--attribValue2"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-subnet1-delete3--attribValue2-attribValue2x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--attribValue2-attribValue2y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--attribValue2x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--attribValue2y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--attribValue3"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-delete3--attribValue3-attribValue3x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--attribValue3-attribValue3y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--attribValue3-attribValue3z"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--attribValue3x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--attribValue3y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--attribValue3z"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--attribValue4"?: ParamValueSerializedTypeMap["vector4"];
  "geo1-subnet1-delete3--attribValue4-attribValue4x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--attribValue4-attribValue4y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--attribValue4-attribValue4z"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--attribValue4-attribValue4w"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--attribValue4x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--attribValue4y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--attribValue4z"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--attribValue4w"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--attribString"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-delete3--byBbox"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete3--bboxSize"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-delete3--bboxSize-bboxSizex"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--bboxSize-bboxSizey"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--bboxSize-bboxSizez"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--bboxSizex"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--bboxSizey"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--bboxSizez"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--bboxCenter"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-delete3--bboxCenter-bboxCenterx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--bboxCenter-bboxCentery"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--bboxCenter-bboxCenterz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--bboxCenterx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--bboxCentery"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--bboxCenterz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete3--byBoundingObject"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete3--keepPoints"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-box2--size"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box2--sizes"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-box2--sizes-sizesx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box2--sizes-sizesy"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box2--sizes-sizesz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box2--sizesx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box2--sizesy"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box2--sizesz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box2--divisions"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-box2--divisions-divisionsx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box2--divisions-divisionsy"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box2--divisions-divisionsz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box2--divisionsx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box2--divisionsy"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box2--divisionsz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box2--center"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-box2--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box2--center-centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box2--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box2--centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box2--centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-box2--centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--class"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete4--invert"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete4--byObjectType"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete4--objectType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete4--byExpression"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete4--expression"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete4--byAttrib"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete4--attribType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete4--attribName"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-delete4--attribSize"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete4--attribComparisonOperator"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-delete4--attribValue1"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--attribValue2"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-subnet1-delete4--attribValue2-attribValue2x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--attribValue2-attribValue2y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--attribValue2x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--attribValue2y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--attribValue3"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-delete4--attribValue3-attribValue3x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--attribValue3-attribValue3y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--attribValue3-attribValue3z"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--attribValue3x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--attribValue3y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--attribValue3z"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--attribValue4"?: ParamValueSerializedTypeMap["vector4"];
  "geo1-subnet1-delete4--attribValue4-attribValue4x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--attribValue4-attribValue4y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--attribValue4-attribValue4z"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--attribValue4-attribValue4w"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--attribValue4x"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--attribValue4y"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--attribValue4z"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--attribValue4w"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--attribString"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-delete4--byBbox"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete4--bboxSize"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-delete4--bboxSize-bboxSizex"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--bboxSize-bboxSizey"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--bboxSize-bboxSizez"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--bboxSizex"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--bboxSizey"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--bboxSizez"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--bboxCenter"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-delete4--bboxCenter-bboxCenterx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--bboxCenter-bboxCentery"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--bboxCenter-bboxCenterz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--bboxCenterx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--bboxCentery"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--bboxCenterz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-delete4--byBoundingObject"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-delete4--keepPoints"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-transform2--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-transform2--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-transform2--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-transform2--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-transform2--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-transform2--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-transform2--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-transform2--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-transform2--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-transform2--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-subnet1-transform2--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-transform2--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-subnet1-merge2--compact"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-merge2--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-merge2--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "geo1-subnet1-pointBuilder1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-subnet1-pointBuilder1--updateNormals"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-subnet1-pointBuilder1--t"?: ParamValueSerializedTypeMap["float"];
}
